
Allocating common symbols
Common symbol       size              file

vgaRam              0x4               kernel.o
vgaHeight           0x1               kernel.o
vgaWidth            0x1               kernel.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000000100000     0x1000
                0x0000000000100000                text = .
                0x0000000000100000                _text = .
                0x0000000000100000                __text = .
 *(.text)
 .text          0x0000000000100000       0x2c start.o
                0x0000000000100000                mbHead
                0x0000000000100020                Start
 *fill*         0x000000000010002c        0x4 00
 .text          0x0000000000100030       0xb1 kernel.o
                0x0000000000100030                Kernel
 *fill*         0x00000000001000e1        0xf 00
 .text          0x00000000001000f0       0x56 io.o
                0x00000000001000f0                IO_outB
                0x0000000000100100                IO_outW
                0x0000000000100110                IO_outL
                0x0000000000100120                IO_inB
                0x0000000000100130                IO_inW
                0x0000000000100140                IO_inL
 *fill*         0x0000000000100146        0xa 00
 .text          0x0000000000100150       0x4e vga.o
                0x0000000000100170                VGA_getModule
 *fill*         0x000000000010019e        0x2 00
 .text          0x00000000001001a0      0x4e8 console.o
                0x00000000001001c0                Console_printString
                0x00000000001001f0                Console_printf
                0x0000000000100410                Console_printChar
                0x00000000001005b0                Console_clearScreen
                0x0000000000100640                Console_setColor
                0x0000000000100650                Console_getModule
 *fill*         0x0000000000100688        0x8 00
 .text          0x0000000000100690       0x61 sys.o
                0x0000000000100690                Sys_restart
                0x00000000001006b0                Sys_haltCPU
                0x00000000001006c0                Sys_panic
 *fill*         0x00000000001006f1        0xf 00
 .text          0x0000000000100700      0x2d1 module.o
                0x0000000000100700                Module_load
                0x0000000000100980                Module_getLoadedModuleNames
                0x00000000001009c0                Module_getNumberOfLoadedModules
                0x00000000001009d0                Module_unload
 *fill*         0x00000000001009d1        0xf 00
 .text          0x00000000001009e0      0x1b4 mem.o
                0x00000000001009e0                Memory_set
                0x0000000000100a80                Memory_copy
 *fill*         0x0000000000100b94        0xc 00
 .text          0x0000000000100ba0      0x13e gdt.o
                0x0000000000100cb0                GDT_getModule
 *fill*         0x0000000000100cde        0x2 00
 .text          0x0000000000100ce0        0x8 gdtAsm.o
                0x0000000000100ce0                GDT_farJump
 *fill*         0x0000000000100ce8        0x8 00
 .text          0x0000000000100cf0       0x78 idt.o
                0x0000000000100d30                IDT_getModule
                0x0000000000101000                . = ALIGN (0x1000)
 *fill*         0x0000000000100d68      0x298 00

.rodata.str1.1  0x0000000000101000       0xf7
 .rodata.str1.1
                0x0000000000101000       0x16 kernel.o
 .rodata.str1.1
                0x0000000000101016       0x12 vga.o
 .rodata.str1.1
                0x0000000000101028       0x66 console.o
 .rodata.str1.1
                0x000000000010108e        0xe sys.o
 .rodata.str1.1
                0x000000000010109c       0x14 module.o
                                         0x3d (size before relaxing)
 .rodata.str1.1
                0x00000000001010b0       0x14 mem.o
                                         0x3d (size before relaxing)
 .rodata.str1.1
                0x00000000001010c4       0x18 gdt.o
 .rodata.str1.1
                0x00000000001010dc       0x1b idt.o

.eh_frame       0x00000000001010f8      0x380
 .eh_frame      0x00000000001010f8       0x38 kernel.o
 .eh_frame      0x0000000000101130       0x78 io.o
                                         0x90 (size before relaxing)
 .eh_frame      0x00000000001011a8       0x28 vga.o
                                         0x40 (size before relaxing)
 .eh_frame      0x00000000001011d0      0x128 console.o
                                        0x140 (size before relaxing)
 .eh_frame      0x00000000001012f8       0x44 sys.o
                                         0x5c (size before relaxing)
 .eh_frame      0x000000000010133c       0x7c module.o
                                         0x94 (size before relaxing)
 .eh_frame      0x00000000001013b8       0x64 mem.o
                                         0x7c (size before relaxing)
 .eh_frame      0x000000000010141c       0x30 gdt.o
                                         0x48 (size before relaxing)
 .eh_frame      0x000000000010144c       0x2c idt.o
                                         0x44 (size before relaxing)

.iplt           0x0000000000101480        0x0
 .iplt          0x0000000000000000        0x0 start.o

.rel.dyn        0x0000000000101478        0x0
 .rel.iplt      0x0000000000000000        0x0 start.o
 .rel.text      0x0000000000000000        0x0 start.o

.data           0x0000000000101478      0xb88
                0x0000000000101478                data = .
                0x0000000000101478                _data = .
                0x0000000000101478                __data = .
 *(.data)
 .data          0x0000000000101478        0x0 kernel.o
 .data          0x0000000000101478        0x0 io.o
 .data          0x0000000000101478        0x0 vga.o
 .data          0x0000000000101478        0x0 console.o
 .data          0x0000000000101478        0x0 sys.o
 .data          0x0000000000101478        0x0 module.o
 .data          0x0000000000101478        0x0 mem.o
 .data          0x0000000000101478        0x0 gdt.o
 .data          0x0000000000101478        0x0 idt.o
 *(.rodata)
                0x0000000000102000                . = ALIGN (0x1000)
 *fill*         0x0000000000101478      0xb88 00

.igot.plt       0x0000000000102000        0x0
 .igot.plt      0x0000000000000000        0x0 start.o

.bss            0x0000000000102000    0x11006
                0x0000000000102000                bss = .
                0x0000000000102000                _bss = .
                0x0000000000102000                __bss = .
 *(.bss)
 .bss           0x0000000000102000     0xff00 start.o
 .bss           0x0000000000111f00        0x0 kernel.o
 .bss           0x0000000000111f00        0x0 io.o
 .bss           0x0000000000111f00       0x34 vga.o
 *fill*         0x0000000000111f34        0xc 00
 .bss           0x0000000000111f40       0x94 console.o
 .bss           0x0000000000111fd4        0x0 sys.o
 *fill*         0x0000000000111fd4        0xc 00
 .bss           0x0000000000111fe0       0xa0 module.o
 .bss           0x0000000000112080        0x0 mem.o
 .bss           0x0000000000112080       0x6e gdt.o
 *fill*         0x00000000001120ee       0x12 00
 .bss           0x0000000000112100      0x840 idt.o
                0x0000000000113000                . = ALIGN (0x1000)
 *fill*         0x0000000000112940      0x6c0 00
 COMMON         0x0000000000113000        0x6 kernel.o
                0x0000000000113000                vgaRam
                0x0000000000113004                vgaHeight
                0x0000000000113005                vgaWidth
                0x0000000000113006                end = .
                0x0000000000113006                _end = .
                0x0000000000113006                __end = .
LOAD start.o
LOAD kernel.o
LOAD io.o
LOAD vga.o
LOAD console.o
LOAD sys.o
LOAD module.o
LOAD mem.o
LOAD gdt.o
LOAD gdtAsm.o
LOAD idt.o
OUTPUT(bootloader/kernel elf32-i386)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 kernel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 io.o
 .comment       0x0000000000000000       0x12 vga.o
 .comment       0x0000000000000000       0x12 console.o
 .comment       0x0000000000000000       0x12 sys.o
 .comment       0x0000000000000000       0x12 module.o
 .comment       0x0000000000000000       0x12 mem.o
 .comment       0x0000000000000000       0x12 gdt.o
 .comment       0x0000000000000000       0x12 idt.o
