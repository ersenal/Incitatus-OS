
Allocating common symbols
Common symbol       size              file

vgaRam              0x4               vga.o
vgaHeight           0x1               vga.o
vgaWidth            0x1               vga.o
PhysicalMemory_allocateFrame
                    0x4               pmm.o
PhysicalMemory_printInfo
                    0x4               pmm.o
PhysicalMemory_freeFrame
                    0x4               pmm.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000000100000     0x4000
                0x0000000000100000                text = .
                0x0000000000100000                _text = .
                0x0000000000100000                __text = .
 *(.text)
 .text          0x0000000000100000       0x2c start.o
                0x0000000000100000                mbHead
                0x0000000000100020                Start
 *fill*         0x000000000010002c        0x4 00
 .text          0x0000000000100030      0x1c7 kernel.o
                0x0000000000100030                Kernel
 *fill*         0x00000000001001f7        0x9 00
 .text          0x0000000000100200       0x56 io.o
                0x0000000000100200                IO_outB
                0x0000000000100210                IO_outW
                0x0000000000100220                IO_outL
                0x0000000000100230                IO_inB
                0x0000000000100240                IO_inW
                0x0000000000100250                IO_inL
 *fill*         0x0000000000100256        0xa 00
 .text          0x0000000000100260       0x44 vga.o
                0x0000000000100280                VGA_getModule
 *fill*         0x00000000001002a4        0xc 00
 .text          0x00000000001002b0      0x4e8 console.o
                0x00000000001002c0                Console_printString
                0x00000000001002f0                Console_printf
                0x0000000000100510                Console_printChar
                0x00000000001006c0                Console_clearScreen
                0x0000000000100750                Console_setColor
                0x0000000000100760                Console_getModule
 *fill*         0x0000000000100798        0x8 00
 .text          0x00000000001007a0       0x61 sys.o
                0x00000000001007a0                Sys_restart
                0x00000000001007c0                Sys_haltCPU
                0x00000000001007d0                Sys_panic
 *fill*         0x0000000000100801        0xf 00
 .text          0x0000000000100810      0x2c6 module.o
                0x0000000000100810                Module_load
                0x0000000000100a90                Module_getLoadedModuleNames
                0x0000000000100ad0                Module_getNumberOfLoadedModules
 *fill*         0x0000000000100ad6        0xa 00
 .text          0x0000000000100ae0      0x1b4 mem.o
                0x0000000000100ae0                Memory_set
                0x0000000000100b80                Memory_copy
 *fill*         0x0000000000100c94        0xc 00
 .text          0x0000000000100ca0      0x114 gdt.o
                0x0000000000100d90                GDT_getModule
 *fill*         0x0000000000100db4        0xc 00
 .text          0x0000000000100dc0        0x8 gdtAsm.o
                0x0000000000100dc0                GDT_farJump
 *fill*         0x0000000000100dc8        0x8 00
 .text          0x0000000000100dd0      0x1a4 pic.o
                0x0000000000100ea0                PIC8259_setMask
                0x0000000000100f10                PIC8259_sendEOI
                0x0000000000100f50                PIC8259_getModule
 *fill*         0x0000000000100f74        0xc 00
 .text          0x0000000000100f80      0xa52 idt.o
                0x00000000001017b0                IDT_registerHandler
                0x0000000000101860                IDT_handlerException
                0x00000000001018f0                IDT_handlerIRQ
                0x0000000000101990                IDT_getModule
 *fill*         0x00000000001019d2        0xe 00
 .text          0x00000000001019e0      0x212 idtAsm.o
                0x0000000000101a30                IDT_handler0
                0x0000000000101a37                IDT_handler1
                0x0000000000101a3e                IDT_handler2
                0x0000000000101a45                IDT_handler3
                0x0000000000101a4c                IDT_handler4
                0x0000000000101a53                IDT_handler5
                0x0000000000101a5a                IDT_handler6
                0x0000000000101a64                IDT_handler7
                0x0000000000101a6e                IDT_handler8
                0x0000000000101a76                IDT_handler9
                0x0000000000101a80                IDT_handler10
                0x0000000000101a88                IDT_handler11
                0x0000000000101a90                IDT_handler12
                0x0000000000101a98                IDT_handler13
                0x0000000000101aa0                IDT_handler14
                0x0000000000101aa8                IDT_handler15
                0x0000000000101ab2                IDT_handler16
                0x0000000000101abc                IDT_handler17
                0x0000000000101ac6                IDT_handler18
                0x0000000000101ad0                IDT_handler19
                0x0000000000101ada                IDT_handler20
                0x0000000000101ae4                IDT_handler21
                0x0000000000101aee                IDT_handler22
                0x0000000000101af8                IDT_handler23
                0x0000000000101b02                IDT_handler24
                0x0000000000101b0c                IDT_handler25
                0x0000000000101b16                IDT_handler26
                0x0000000000101b20                IDT_handler27
                0x0000000000101b2a                IDT_handler28
                0x0000000000101b34                IDT_handler29
                0x0000000000101b3e                IDT_handler30
                0x0000000000101b48                IDT_handler31
                0x0000000000101b52                IDT_request0
                0x0000000000101b5c                IDT_request1
                0x0000000000101b66                IDT_request2
                0x0000000000101b70                IDT_request3
                0x0000000000101b7a                IDT_request4
                0x0000000000101b84                IDT_request5
                0x0000000000101b8e                IDT_request6
                0x0000000000101b98                IDT_request7
                0x0000000000101ba2                IDT_request8
                0x0000000000101bac                IDT_request9
                0x0000000000101bb6                IDT_request10
                0x0000000000101bc0                IDT_request11
                0x0000000000101bca                IDT_request12
                0x0000000000101bd4                IDT_request13
                0x0000000000101bde                IDT_request14
                0x0000000000101be8                IDT_request15
 *fill*         0x0000000000101bf2        0xe 00
 .text          0x0000000000101c00      0x118 pit.o
                0x0000000000101c80                PIT8253_measureRuntime
                0x0000000000101ca0                PIT8253_sleep
                0x0000000000101ce0                PIT8253_getModule
 *fill*         0x0000000000101d18        0x8 00
 .text          0x0000000000101d20       0xd4 cpu.o
                0x0000000000101d20                CPU_getCR
                0x0000000000101d90                CPU_setCR
 *fill*         0x0000000000101df4        0xc 00
 .text          0x0000000000101e00      0x2b2 bitmap.o
                0x0000000000101e00                Bitmap_setBit
                0x0000000000101ea0                Bitmap_clearBit
                0x0000000000101f40                Bitmap_isSet
                0x0000000000101fe0                Bitmap_toggle
                0x00000000001020a0                Bitmap_init
 *fill*         0x00000000001020b2        0xe 00
 .text          0x00000000001020c0      0x159 stack.o
                0x00000000001020c0                Stack_push
                0x0000000000102160                Stack_pop
                0x00000000001021f0                Stack_peek
                0x0000000000102200                Stack_init
 *fill*         0x0000000000102219        0x7 00
 .text          0x0000000000102220       0x4d math.o
                0x0000000000102220                Math_abs
                0x0000000000102230                Math_sqrt
                0x0000000000102240                Math_sin
                0x0000000000102250                Math_cos
                0x0000000000102260                Math_tan
 *fill*         0x000000000010226d        0x3 00
 .text          0x0000000000102270       0x76 pmm.o
                0x00000000001022b0                PhysicalMemory_getModule
 *fill*         0x00000000001022e6        0xa 00
 .text          0x00000000001022f0      0x321 smm.o
                0x00000000001022f0                StackPMM_allocateFrame
                0x0000000000102340                StackPMM_freeFrame
                0x00000000001023d0                StackPMM_init
                0x00000000001025b0                StackPMM_printInfo
 *fill*         0x0000000000102611        0xf 00
 .text          0x0000000000102620      0x435 bmm.o
                0x0000000000102620                BitmapPMM_allocateFrame
                0x00000000001026c0                BitmapPMM_freeFrame
                0x0000000000102770                BitmapPMM_printInfo
                0x00000000001027e0                BitmapPMM_init
 *fill*         0x0000000000102a55        0xb 00
 .text          0x0000000000102a60      0x892 vmm.o
                0x0000000000102db0                VirtualMemory_mapPage
                0x0000000000102f60                VirtualMemory_unmapPage
                0x0000000000103110                VirtualMemory_getPhysicalAddress
                0x00000000001032b0                VirtualMemory_getModule
 *fill*         0x00000000001032f2        0xe 00
 .text          0x0000000000103300      0x3a8 heap.o
                0x0000000000103310                HeapMemory_expand
                0x0000000000103490                HeapMemory_contract
                0x0000000000103670                HeapMemory_getModule
                0x0000000000104000                . = ALIGN (0x1000)
 *fill*         0x00000000001036a8      0x958 00

.rodata.str1.1  0x0000000000104000      0x2bf
 .rodata.str1.1
                0x0000000000104000       0x51 kernel.o
                                         0x54 (size before relaxing)
 .rodata.str1.1
                0x0000000000104051       0x12 vga.o
 .rodata.str1.1
                0x0000000000104063       0x3d console.o
                                         0x66 (size before relaxing)
 .rodata.str1.1
                0x00000000001040a0        0xe sys.o
 .rodata.str1.1
                0x00000000001040ae       0x14 module.o
                                         0x3d (size before relaxing)
 .rodata.str1.1
                0x00000000001040c2       0x14 mem.o
                                         0x3d (size before relaxing)
 .rodata.str1.1
                0x00000000001040d6       0x18 gdt.o
 .rodata.str1.1
                0x00000000001040ee        0xa pic.o
 .rodata.str1.1
                0x00000000001040f8       0x56 idt.o
                                         0x7f (size before relaxing)
 .rodata.str1.1
                0x000000000010414e        0x9 pit.o
 .rodata.str1.1
                0x0000000000104157       0x18 bitmap.o
                                         0x41 (size before relaxing)
 .rodata.str1.1
                0x000000000010416f       0x17 stack.o
                                         0x40 (size before relaxing)
 .rodata.str1.1
                0x0000000000104186       0x18 pmm.o
 .rodata.str1.1
                0x000000000010419e       0x7f smm.o
                                         0xaf (size before relaxing)
 .rodata.str1.1
                0x000000000010421d       0x2c bmm.o
                                         0xb0 (size before relaxing)
 .rodata.str1.1
                0x0000000000104249       0x62 vmm.o
                                         0x92 (size before relaxing)
 .rodata.str1.1
                0x00000000001042ab       0x14 heap.o
                                         0x3d (size before relaxing)

.eh_frame       0x00000000001042c0      0x9f8
 .eh_frame      0x00000000001042c0       0x38 kernel.o
 .eh_frame      0x00000000001042f8       0x78 io.o
                                         0x90 (size before relaxing)
 .eh_frame      0x0000000000104370       0x28 vga.o
                                         0x40 (size before relaxing)
 .eh_frame      0x0000000000104398      0x128 console.o
                                        0x140 (size before relaxing)
 .eh_frame      0x00000000001044c0       0x44 sys.o
                                         0x5c (size before relaxing)
 .eh_frame      0x0000000000104504       0x68 module.o
                                         0x80 (size before relaxing)
 .eh_frame      0x000000000010456c       0x64 mem.o
                                         0x7c (size before relaxing)
 .eh_frame      0x00000000001045d0       0x28 gdt.o
                                         0x40 (size before relaxing)
 .eh_frame      0x00000000001045f8       0x68 pic.o
                                         0x80 (size before relaxing)
 .eh_frame      0x0000000000104660       0x9c idt.o
                                         0xb4 (size before relaxing)
 .eh_frame      0x00000000001046fc       0x78 pit.o
                                         0x90 (size before relaxing)
 .eh_frame      0x0000000000104774       0x28 cpu.o
                                         0x40 (size before relaxing)
 .eh_frame      0x000000000010479c       0xec bitmap.o
                                        0x104 (size before relaxing)
 .eh_frame      0x0000000000104888       0x70 stack.o
                                         0x88 (size before relaxing)
 .eh_frame      0x00000000001048f8       0x64 math.o
                                         0x7c (size before relaxing)
 .eh_frame      0x000000000010495c       0x2c pmm.o
                                         0x44 (size before relaxing)
 .eh_frame      0x0000000000104988       0x94 smm.o
                                         0xac (size before relaxing)
 .eh_frame      0x0000000000104a1c       0xb4 bmm.o
                                         0xcc (size before relaxing)
 .eh_frame      0x0000000000104ad0      0x158 vmm.o
                                        0x170 (size before relaxing)
 .eh_frame      0x0000000000104c28       0x90 heap.o
                                         0xa8 (size before relaxing)

.rodata.str1.4  0x0000000000104cb8       0x64
 .rodata.str1.4
                0x0000000000104cb8       0x1f idt.o
 *fill*         0x0000000000104cd7        0x1 00
 .rodata.str1.4
                0x0000000000104cd8       0x22 vmm.o
 *fill*         0x0000000000104cfa        0x2 00
 .rodata.str1.4
                0x0000000000104cfc       0x20 heap.o
                                         0x1f (size before relaxing)

.iplt           0x0000000000104d20        0x0
 .iplt          0x0000000000000000        0x0 start.o

.rel.dyn        0x0000000000104d1c        0x0
 .rel.iplt      0x0000000000000000        0x0 start.o
 .rel.text      0x0000000000000000        0x0 start.o

.data           0x0000000000104d1c      0x2e4
                0x0000000000104d1c                data = .
                0x0000000000104d1c                _data = .
                0x0000000000104d1c                __data = .
 *(.data)
 .data          0x0000000000104d1c        0x0 kernel.o
 .data          0x0000000000104d1c        0x0 io.o
 .data          0x0000000000104d1c        0x0 vga.o
 .data          0x0000000000104d1c        0x0 console.o
 .data          0x0000000000104d1c        0x0 sys.o
 .data          0x0000000000104d1c        0x0 module.o
 .data          0x0000000000104d1c        0x0 mem.o
 .data          0x0000000000104d1c        0x0 gdt.o
 .data          0x0000000000104d1c        0x0 pic.o
 .data          0x0000000000104d1c        0x0 idt.o
 .data          0x0000000000104d1c        0x0 pit.o
 .data          0x0000000000104d1c        0x0 cpu.o
 .data          0x0000000000104d1c        0x0 bitmap.o
 .data          0x0000000000104d1c        0x0 stack.o
 .data          0x0000000000104d1c        0x0 math.o
 .data          0x0000000000104d1c        0x0 pmm.o
 .data          0x0000000000104d1c        0x0 smm.o
 .data          0x0000000000104d1c        0x0 bmm.o
 .data          0x0000000000104d1c        0x0 vmm.o
 .data          0x0000000000104d1c        0x0 heap.o
 *(.rodata)
 .rodata        0x0000000000104d1c       0x28 cpu.o
                0x0000000000105000                . = ALIGN (0x1000)
 *fill*         0x0000000000104d44      0x2bc 00

.igot.plt       0x0000000000105000        0x0
 .igot.plt      0x0000000000000000        0x0 start.o

.bss            0x0000000000105000    0x11014
                0x0000000000105000                bss = .
                0x0000000000105000                _bss = .
                0x0000000000105000                __bss = .
 *(.bss)
 .bss           0x0000000000105000     0xff00 start.o
 .bss           0x0000000000114f00        0x0 kernel.o
 .bss           0x0000000000114f00        0x0 io.o
 .bss           0x0000000000114f00       0x34 vga.o
 *fill*         0x0000000000114f34        0xc 00
 .bss           0x0000000000114f40       0x94 console.o
 .bss           0x0000000000114fd4        0x0 sys.o
 *fill*         0x0000000000114fd4        0xc 00
 .bss           0x0000000000114fe0       0xa0 module.o
 .bss           0x0000000000115080        0x0 mem.o
 .bss           0x0000000000115080       0x6e gdt.o
 *fill*         0x00000000001150ee       0x12 00
 .bss           0x0000000000115100       0x34 pic.o
 *fill*         0x0000000000115134        0xc 00
 .bss           0x0000000000115140      0xc40 idt.o
 .bss           0x0000000000115d80       0x54 pit.o
 .bss           0x0000000000115dd4        0x0 cpu.o
 .bss           0x0000000000115dd4        0x0 bitmap.o
 .bss           0x0000000000115dd4        0x0 stack.o
 .bss           0x0000000000115dd4        0x0 math.o
 *fill*         0x0000000000115dd4        0xc 00
 .bss           0x0000000000115de0       0x3c pmm.o
 .bss           0x0000000000115e1c       0x14 smm.o
 .bss           0x0000000000115e30       0x18 bmm.o
 *fill*         0x0000000000115e48       0x18 00
 .bss           0x0000000000115e60       0x38 vmm.o
 *fill*         0x0000000000115e98        0x8 00
 .bss           0x0000000000115ea0       0x54 heap.o
                0x0000000000116000                . = ALIGN (0x1000)
 *fill*         0x0000000000115ef4      0x10c 00
 COMMON         0x0000000000116000        0x6 vga.o
                0x0000000000116000                vgaRam
                0x0000000000116004                vgaHeight
                0x0000000000116005                vgaWidth
 *fill*         0x0000000000116006        0x2 00
 COMMON         0x0000000000116008        0xc pmm.o
                0x0000000000116008                PhysicalMemory_allocateFrame
                0x000000000011600c                PhysicalMemory_printInfo
                0x0000000000116010                PhysicalMemory_freeFrame
                0x0000000000116014                end = .
                0x0000000000116014                _end = .
                0x0000000000116014                __end = .
LOAD start.o
LOAD kernel.o
LOAD io.o
LOAD vga.o
LOAD console.o
LOAD sys.o
LOAD module.o
LOAD mem.o
LOAD gdt.o
LOAD gdtAsm.o
LOAD pic.o
LOAD idt.o
LOAD idtAsm.o
LOAD pit.o
LOAD cpu.o
LOAD bitmap.o
LOAD stack.o
LOAD math.o
LOAD pmm.o
LOAD smm.o
LOAD bmm.o
LOAD vmm.o
LOAD heap.o
OUTPUT(bootloader/kernel elf32-i386)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 kernel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 io.o
 .comment       0x0000000000000000       0x12 vga.o
 .comment       0x0000000000000000       0x12 console.o
 .comment       0x0000000000000000       0x12 sys.o
 .comment       0x0000000000000000       0x12 module.o
 .comment       0x0000000000000000       0x12 mem.o
 .comment       0x0000000000000000       0x12 gdt.o
 .comment       0x0000000000000000       0x12 pic.o
 .comment       0x0000000000000000       0x12 idt.o
 .comment       0x0000000000000000       0x12 pit.o
 .comment       0x0000000000000000       0x12 cpu.o
 .comment       0x0000000000000000       0x12 bitmap.o
 .comment       0x0000000000000000       0x12 stack.o
 .comment       0x0000000000000000       0x12 math.o
 .comment       0x0000000000000000       0x12 pmm.o
 .comment       0x0000000000000000       0x12 smm.o
 .comment       0x0000000000000000       0x12 bmm.o
 .comment       0x0000000000000000       0x12 vmm.o
 .comment       0x0000000000000000       0x12 heap.o
